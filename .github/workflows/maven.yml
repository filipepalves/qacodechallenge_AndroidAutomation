name: Android Tests Workflow

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  android-tests:
    strategy:
      fail-fast: false
      matrix:
        apiLevel: [33]
        emuTag: [google_apis]
        arch: [x86_64]
        include:
          - apiLevel: 33
            emuTag: google_apis
            arch: x86_64

    env:
      CI: true
      ANDROID_AVD: emulator
      APPIUM_TEST_SERVER_PORT: 4723
      APPIUM_TEST_SERVER_HOST: 127.0.0.1

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.apiLevel }}

      - name: Create AVD and generate snapshot for caching
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: ${{ env.ANDROID_AVD }}
          force-avd-creation: true # Always create AVD
          api-level: ${{ matrix.apiLevel }}
          disable-spellchecker: true
          target: ${{ matrix.emuTag }}
          emulator-options: -no-window -gpu swiftshader -noaudio -no-boot-anim -accel auto # Added -accel auto
          arch: ${{ matrix.arch }}
          disable-animations: true
          script: echo "Emulator started by reactivecircus action."
          shutdown-emulator: false
        timeout-minutes: 20

      - name: Wait for Emulator Boot Completion
        run: adb wait-for-device shell getprop sys.boot_completed | grep 1
        timeout-minutes: 10 # Increased boot completion timeout

      - name: Unlock Screen
        run: adb shell input keyevent 82
        continue-on-error: true

      - name: Disable Animations
        run: |
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0
          adb shell settings put secure spell_checker_enabled 0
          
      - name: Install Appium
        run: sudo npm install -g appium

      - name: Install Appium Driver - UIAutomator2
        run: appium driver install uiautomator2

      - name: Start Appium server
        run: nohup appium server --port=$APPIUM_TEST_SERVER_PORT --address=$APPIUM_TEST_SERVER_HOST --relaxed-security --log-no-colors --log-timestamp 2>&1 > appium.log &

      - name: Wait for Appium Server
        run: sleep 5

      - name: Capture logcat
        run: nohup adb logcat > logcat.log &

      - name: Build and Test with Maven
        run: mvn clean test -Dsurefire.suiteXmlFile=src/test/TestSuites/GithubActions.xml
        continue-on-error: true

      - name: Create Allure Environment Properties
        run: |
          echo "environment=github-actions" > target/allure-results/environment.properties

      - name: Generate Allure Report
        run: allure generate target/allure-results --clean -o target/allure-report

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report
          retention-days: 5

      - name: Save logcat output
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: logcat-api${{ matrix.apiLevel }}
          path: logcat.log

      - name: Save server output
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: appium-api${{ matrix.apiLevel }}
          path: appium.log
